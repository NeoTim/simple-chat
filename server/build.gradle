import java.util.regex.Matcher

def jvmVersion = System.getProperty('java.version').split('\\.')[0] as Integer
def useModules = jvmVersion >= 9 && !project.hasProperty('no-modules')

buildscript {
  repositories {
    maven { url 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-ospackage-plugin:6.1.1'
  }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'nebula.ospackage-application'

group = 'ai.swim'
description = 'Chat Web Agents'
sourceCompatibility = 1.9
version = project.property('application.version')
ext.moduleName = 'swim.chat'
mainClassName = 'swim.chat.ChatPlane'

repositories {
  jcenter()
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }
}

dependencies {
  compile 'ai.swim:swim-loader:3.9.1'
  compile 'ai.swim:swim-server:3.9.1'
  compile 'ai.swim:swim-client:3.9.1'
}

afterEvaluate {
  compileJava {
    if (useModules) {
      doFirst {
        options.compilerArgs += [
          '--module-path', classpath.asPath,
        ]
        classpath = files()
      }
    }
    options.compilerArgs += ['-Xlint']
    options.encoding = 'UTF-8'
  }

  jar {
    inputs.property('moduleName', moduleName)
    manifest {
      attributes(
        'Implementation-Title': moduleName,
        'Implementation-Version': version,
        'Main-Class': mainClassName)
    }
  }

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    if (!useModules) {
      exclude '*module-info*'
    }
  }

  run {
    dependsOn jar
    doFirst {
      jvmArgs += [
        '--module-path', files(configurations.runtimeClasspath, jar.archivePath).asPath,
      ]
      classpath = files()
    }
    main = '--module'
    args "${moduleName}/${mainClassName}"
  }

  startScripts {
    inputs.property("moduleName", moduleName)
    doFirst {
      classpath = files()
      defaultJvmOpts = [
        '-Dswim.config=/etc/swim-chat/server.recon',
        '-Xms3g',
        '-Xmx3g',
        '--module-path', 'APP_HOME_LIBS',
        '--module', moduleName + '/' + mainClassName
      ]
    }
    doLast{
      def bashFile = new File(outputDir, applicationName)
      String bashContent = bashFile.text
      bashFile.text = bashContent.replaceFirst('APP_HOME_LIBS', Matcher.quoteReplacement('$APP_HOME/lib'))

      def batFile = new File(outputDir, applicationName + ".bat")
      String batContent = batFile.text
      batFile.text = batContent.replaceFirst('APP_HOME_LIBS', Matcher.quoteReplacement('%APP_HOME%\\lib'))
    }
  }

  ospackage {
    release '1'
    prefix '/opt/swim-chat'
  }

}
